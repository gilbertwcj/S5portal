<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:s="http://www.springframework.org/schema/security" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">


	<bean id="dataSourcePortal" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://192.168.147.209:3306/test" />
		<property name="username" value="root" />
		<property name="password" value="mysql" />
	</bean>

	<bean id="sdc-sh-vm001" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://192.168.147.208:3306/db_redmine" />
		<property name="username" value="root" />
		<property name="password" value="mysql" />
	</bean>
	
	<bean id="sdc-s5-001" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://192.168.147.207:3306/db_redmine" />
		<property name="username" value="root" />
		<property name="password" value="mysql" />
	</bean>
	


	<bean id="dataSource" class="com.nssol_sh.spring.foundation.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="dataSourcePortal" value-ref="dataSourcePortal" />
				<entry key="sdc-sh-vm001" value-ref="sdc-sh-vm001" />
				<entry key="sdc-s5-001" value-ref="sdc-s5-001" />
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dataSourcePortal" />
	</bean>


	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.nssol_sh.s5portal.persistence" />
	</bean>




	<bean id="accessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
		<constructor-arg name="decisionVoters">
			<list>
				<bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter">
					<property name="rolePrefix" value="" />
				</bean>
				<bean id="webExpressionVoter"
					class="com.nssol_sh.spring.foundation.S5WebExpressionVoter" />
			</list>
		</constructor-arg>
	</bean>


	<bean id="casEntryPoint"
		class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
		<property name="loginUrl"
			value="https://sdc-sh-m001.nssol-sh.com:8443/cas/login" />
		<property name="serviceProperties" ref="serviceProperties" />
	</bean>

	<bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties">
		<property name="service"
			value="http://192.168.154.103:8080/S5Portal/j_spring_cas_security_check"></property>
		<property name="sendRenew" value="false" />
	</bean>

	<bean id="userService"
		class="com.nssol_sh.spring.foundation.S5PortalUserDetailsService" >		
	</bean>

	<bean id="redmineInfoServiceForCas" class="com.nssol_sh.s5portal.service.RedmineInfoService"></bean>

	<bean id="casAuthProvider"
		class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
		<property name="authenticationUserDetailsService">
			<bean
				class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
				<constructor-arg ref="userService" />
			</bean>
		</property>
		<property name="serviceProperties" ref="serviceProperties" />
		<property name="ticketValidator">
			<bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
				<constructor-arg index="0"
					value="https://sdc-sh-m001.nssol-sh.com:8443/cas" />
			</bean>
		</property>
		<property name="key" value="an_id_for_this_auth_provider_only" />
	</bean>


	<s:authentication-manager alias="authManager">
		<s:authentication-provider ref="casAuthProvider" />
	</s:authentication-manager>

	<bean id="casFilter" class="com.nssol_sh.spring.foundation.WebAppFilter">
		<property name="authenticationManager" ref="authManager" />
	</bean>


	<s:http entry-point-ref="casEntryPoint" use-expressions="true" access-decision-manager-ref="accessDecisionManager">

		<s:intercept-url pattern="/**" access="isAuthenticated()" />

		<s:custom-filter ref="requestSingleLogoutFilter"
			before="LOGOUT_FILTER" />
		<s:custom-filter ref="singleLogoutFilter" before="CAS_FILTER" />
		<s:custom-filter ref="casFilter" position="CAS_FILTER" />
	</s:http>



	<!-- This filter handles a Single Logout Request from the CAS Server -->
	<bean id="singleLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter" />

	<!-- This filter redirects to the CAS Server to signal Single Logout should 
		be performed -->
	<bean id="requestSingleLogoutFilter"
		class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<constructor-arg value="https://sdc-sh-m001.nssol-sh.com:8443/cas/logout" />
		<constructor-arg>
			<bean
				class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
		</constructor-arg>
	</bean>

</beans>
